apiVersion: v1
kind: Namespace
metadata:
  name: batch-pods
---
apiVersion: v1
kind: Namespace
metadata:
  name: test
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: batch-svc
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: gateway
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: notebook
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: letsencrypt
---
kind: Role
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  namespace: default
  name: read-letsencrypt-config
rules:
- apiGroups: [""]
  resources: ["secrets"]
  resourceNames: ["letsencrypt-config"]
  verbs: ["get"]
---
kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  namespace: default
  name: gateway-read-letsencrypt-config
subjects:
- kind: ServiceAccount
  name: gateway
  namespace: default
roleRef:
  kind: Role
  name: read-letsencrypt-config
  apiGroup: ""
---
kind: Role
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  namespace: default
  name: create-services-and-pods
rules:
- apiGroups: [""]
  resources: ["services"]
  verbs: ["*"]
- apiGroups: [""]
  resources: ["pods"]
  verbs: ["*"]
---
kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  namespace: default
  name: notebook-create-services-and-pods
subjects:
- kind: ServiceAccount
  name: notebook
  namespace: default
roleRef:
  kind: Role
  name: create-services-and-pods
  apiGroup: ""
---
kind: Role
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  namespace: default
  name: read-get-user-secret
rules:
- apiGroups: [""]
  resources: ["secrets"]
  resourceNames: ["get-users"]
  verbs: ["get"]
---
kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  namespace: default
  name: notebook-read-get-users-secret
subjects:
- kind: ServiceAccount
  name: notebook
  namespace: default
roleRef:
  kind: Role
  name: read-get-user-secret
  apiGroup: ""
---
kind: Role
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  namespace: default
  name: update-letsencrypt-config
rules:
- apiGroups: [""]
  resources: ["secrets"]
  resourceNames: ["letsencrypt-config"]
  verbs: ["get", "update", "patch"]
---
kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  namespace: default
  name: letsencrypt-update-letsencrypt-config
subjects:
- kind: ServiceAccount
  name: letsencrypt
  namespace: default
roleRef:
  kind: Role
  name: update-letsencrypt-config
  apiGroup: ""
---
kind: Role
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  namespace: batch-pods
  name: batch-pods-admin
rules:
- apiGroups: [""]
  resources: ["pods"]
  verbs: ["*"]
- apiGroups: [""]
  resources: ["pods/log"]
  verbs: ["get"]
- apiGroups: [""]
  resources: ["services"]
  verbs: ["*"]
- apiGroups: [""]
  resources: ["persistentvolumeclaims"]
  verbs: ["*"]
---
kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: batch-svc-batch-pods-admin-binding
  namespace: batch-pods
subjects:
- kind: ServiceAccount
  name: batch-svc
  namespace: default
roleRef:
  kind: Role
  name: batch-pods-admin
  apiGroup: ""
---
kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: test-svc-batch-pods-admin-binding
  namespace: batch-pods
subjects:
- kind: ServiceAccount
  name: test-svc
  namespace: batch-pods
roleRef:
  kind: Role
  name: batch-pods-admin
  apiGroup: ""
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: deploy-svc
  namespace: batch-pods
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: test-svc
  namespace: batch-pods
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: deploy-svc
  namespace: test
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: test-svc
  namespace: test
---
kind: Role
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  namespace: default
  name: default-deploy
rules:
- apiGroups: ["*"]
  resources: ["*"]
  verbs: ["*"]
---
kind: Role
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  namespace: test
  name: test-test
rules:
- apiGroups: ["*"]
  resources: ["*"]
  verbs: ["*"]
---
kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: deploy-svc-default-deploy-binding
  namespace: default
subjects:
- kind: ServiceAccount
  name: deploy-svc
  namespace: batch-pods
roleRef:
  kind: Role
  name: default-deploy
  apiGroup: "rbac.authorization.k8s.io"
---
kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: test-svc-test-test-binding
  namespace: test
subjects:
- kind: ServiceAccount
  name: test-svc
  namespace: batch-pods
roleRef:
  kind: Role
  name: test-test
  apiGroup: "rbac.authorization.k8s.io"
---
kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: batch-svc-default-deploy-binding
  namespace: default
subjects:
- kind: ServiceAccount
  name: batch-svc
  namespace: default
roleRef:
  kind: Role
  name: default-deploy
  apiGroup: "rbac.authorization.k8s.io"
---
kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: batch-svc-test-test-binding
  namespace: default
subjects:
- kind: ServiceAccount
  name: batch-svc
  namespace: default
roleRef:
  kind: Role
  name: test-test
  apiGroup: "rbac.authorization.k8s.io"
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: letsencrypt-certs
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 10Mi
---
apiVersion: v1
kind: Role
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  namespace: test
  name: delete-test-pvc
rules:
- apiGroups: [""]
  resources: ["persistentvolumeclaims"]
  verbs: ["list", "delete"]
---
apiVersion: v1
kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: deploy-svc-delete-test-pvc
  namespace: test
subjects:
- kind: ServiceAccount
  name: deploy-svc
  namespace: batch-pods
roleRef:
  kind: Role
  name: delete-test-pvc
  apiGroup: "rbac.authorization.k8s.io"
---
apiVersion: v1
kind: Role
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  namespace: batch-pods
  name: delete-batch-pods-pvc
rules:
- apiGroups: [""]
  resources: ["persistentvolumeclaims"]
  verbs: ["list", "delete"]
---
apiVersion: v1
kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: deploy-svc-delete-batch-pods-pvc
  namespace: batch-pods
subjects:
- kind: ServiceAccount
  name: deploy-svc
  namespace: batch-pods
roleRef:
  kind: Role
  name: delete-batch-pods-pvc
  apiGroup: "rbac.authorization.k8s.io"
---
kind: StorageClass
apiVersion: storage.k8s.io/v1
metadata:
  name: batch
  namespace: batch-pods
provisioner: kubernetes.io/gce-pd
parameters:
  type: pd-standard
  replication-type: none
---
kind: StorageClass
apiVersion: storage.k8s.io/v1
metadata:
  name: batch
  namespace: test
provisioner: kubernetes.io/gce-pd
parameters:
  type: pd-standard
  replication-type: none
---
apiVersion: v1
kind: ResourceQuota
metadata:
  name: batch-storage-class-quota
  namespace: test
spec:
  hard:
    batch.storageclass.storage.k8s.io/requests.storage: 100Gi
    batch.storageclass.storage.k8s.io/persistentvolumeclaims: 100
